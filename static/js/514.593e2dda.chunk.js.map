{"version":3,"file":"static/js/514.593e2dda.chunk.js","mappings":"sOACA,EAA8B,+BAA9B,EAAoE,wBAApE,EAAwG,6BAAxG,EAAiJ,6BAAjJ,EAAwL,2BAAxL,EAA2N,yB,SCKrNA,EAAgB,CAAEC,MAAO,GAAIC,SAAU,IACvCC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaH,QACpBC,SAAUE,EAAAA,KAAaE,IAAI,EAAG,yBAGnBC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLd,cAAeA,EACfe,iBAAkBZ,EAClBa,SAde,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BX,GACEY,EAAAA,EAAAA,IAAU,CACRnB,MAAOgB,EAAOhB,MACdC,SAAUe,EAAOf,YAGrBiB,GACF,EAM6BN,UAEvBQ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACX,UAAWC,EAAUW,aAAa,MAAKV,SAAA,EAC3CQ,EAAAA,EAAAA,MAAA,SAAOV,UAAWC,EAAeY,QAAQ,QAAOX,SAAA,CAAC,SAE/CH,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CACJd,UAAWC,EACXc,KAAK,QACLC,KAAK,QACLC,UAAQ,KAEVlB,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAUC,UACzBH,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CAACF,KAAK,gBAGvBN,EAAAA,EAAAA,MAAA,SAAOV,UAAWC,EAAeY,QAAQ,WAAUX,SAAA,CAAC,YAElDH,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CACJd,UAAWC,EACXc,KAAK,WACLC,KAAK,WACLC,UAAQ,KAEVlB,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAUC,UACzBH,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CAACF,KAAK,mBAGvBjB,EAAAA,EAAAA,KAAA,UAAQgB,KAAK,SAASf,UAAWC,EAAYC,SAAC,iBAOxD,EC9De,SAASiB,IACtB,OAAOpB,EAAAA,EAAAA,KAACH,EAAS,GACnB,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginForm_formWrapper__Sc8W5\",\"form\":\"LoginForm_form__gPEx5\",\"formLabel\":\"LoginForm_formLabel__Ogzum\",\"formInput\":\"LoginForm_formInput__kt+x6\",\"formBtn\":\"LoginForm_formBtn__HRL1P\",\"error\":\"LoginForm_error__012y+\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport css from './LoginForm.module.css';\n\nconst initialValues = { email: '', password: '' };\nconst schema = Yup.object().shape({\n  email: Yup.string().email(),\n  password: Yup.string().min(5, 'Too short password!'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      userLogin({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n  return (\n    <div className={css.formWrapper}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <label className={css.formLabel} htmlFor=\"email\">\n            Email\n            <Field\n              className={css.formInput}\n              type=\"email\"\n              name=\"email\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"email\" />\n            </span>\n          </label>\n          <label className={css.formLabel} htmlFor=\"password\">\n            Password\n            <Field\n              className={css.formInput}\n              type=\"password\"\n              name=\"password\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"password\" />\n            </span>\n          </label>\n          <button type=\"submit\" className={css.formBtn}>\n            Log In\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nexport default function LoginPage() {\n  return <LoginForm />;\n}\n"],"names":["initialValues","email","password","schema","Yup","shape","min","LoginForm","dispatch","useDispatch","_jsx","className","css","children","Formik","validationSchema","onSubmit","values","_ref","resetForm","userLogin","_jsxs","Form","autoComplete","htmlFor","Field","type","name","required","ErrorMessage","LoginPage"],"sourceRoot":""}